<?php
/*
Plugin Name: Add Destination Role and Redirect
Description: Adds a custom user role called "Destination" and redirects users with this role to a specific customizable post upon login.
Version: 1.0
Author: Your Name
*/

// Function to add the 'destination' role
function add_destination_role() {
  add_role(
    'destination',
    'Destination',
    array(
      'read'                     => true,
      'edit_posts'               => false,
      'delete_posts'             => false,
      'read_private_posts'       => true, // Capability to read private posts
    )
  );
}

// Hook to add the role when the plugin is activated
function add_role_on_activation($network_wide) {
  add_destination_role();

  if (is_multisite() && $network_wide) {
    global $wpdb;
    $blog_ids = $wpdb->get_col("SELECT blog_id FROM $wpdb->blogs WHERE site_id = {$wpdb->siteid}");
    foreach ($blog_ids as $blog_id) {
      switch_to_blog($blog_id);
      add_destination_role();
      restore_current_blog();
    }
  }
}
register_activation_hook(__FILE__, 'add_role_on_activation');

// Hook to remove the role when the plugin is deactivated
function remove_destination_role() {
  remove_role('destination');
}
register_deactivation_hook(__FILE__, 'remove_destination_role');

// Grant the 'destination' role access to private travel forms and specific private page
function grant_destination_role_private_access() {
  $role = get_role('destination');
  if ($role) {
    $role->add_cap('read_private_posts');
  }
}
add_action('init', 'grant_destination_role_private_access');

// Add a custom user meta field to the user profile page
function add_custom_user_meta_field($user) {
  if (in_array('destination', (array) $user->roles)) { ?>
    <h3><?php _e('Custom Redirect URL for Destination Role', 'custom-user-meta'); ?></h3>
    <table class="form-table">
      <tr>
        <th><label for="custom_redirect_url"><?php _e('Redirect URL'); ?></label></th>
        <td>
          <input type="text" name="custom_redirect_url" id="custom_redirect_url" value="<?php echo esc_attr(get_user_meta($user->ID, 'custom_redirect_url', true)); ?>" class="regular-text" /><br />
          <span class="description"><?php _e('Enter the URL to which you want to redirect this user upon login.'); ?></span>
        </td>
      </tr>
    </table>
  <?php }
}

add_action('show_user_profile', 'add_custom_user_meta_field');
add_action('edit_user_profile', 'add_custom_user_meta_field');

// Save the custom user meta field value
function save_custom_user_meta_field($user_id) {
  if (!current_user_can('edit_user', $user_id)) return false;
  update_user_meta($user_id, 'custom_redirect_url', $_POST['custom_redirect_url']);
}

add_action('personal_options_update', 'save_custom_user_meta_field');
add_action('edit_user_profile_update', 'save_custom_user_meta_field');

// Redirect 'destination' users to a specific page upon login based on user meta
function redirect_destination_user_on_login($redirect_to, $request, $user) {
  if (isset($user->roles) && is_array($user->roles) && in_array('destination', $user->roles)) {
    $custom_redirect_url = get_user_meta($user->ID, 'custom_redirect_url', true);
    if ($custom_redirect_url) {
      $redirect_to = $custom_redirect_url;
    }
  }
  return $redirect_to;
}

add_filter('login_redirect', 'redirect_destination_user_on_login', 10, 3);

// Optional: Restrict access to specific private pages based on user roles
function restrict_private_page_access() {
  if (is_page('alaska-rainbow-adventures-ak-questionnaire') && !current_user_can('read_private_posts')) {
    wp_redirect(home_url());
    exit;
  }
}

add_action('template_redirect', 'restrict_private_page_access');